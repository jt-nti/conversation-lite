{"version":3,"sources":[" [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] ","../../../../../blockchain-dev/temp-mod/node_modules/dom-utils/lib/parse-url.js","../../../../../blockchain-dev/temp-mod/node_modules/autotrack/lib/method-chain.js"," [synthetic:es6/util/arrayfromiterable] ","../../../../../blockchain-dev/temp-mod/node_modules/autotrack/lib/utilities.js","../../../../../blockchain-dev/temp-mod/node_modules/autotrack/lib/usage.js","../../../../../blockchain-dev/temp-mod/node_modules/autotrack/lib/plugins/clean-url-tracker.js","../../../../../blockchain-dev/temp-mod/node_modules/autotrack/lib/constants.js","../../../../../blockchain-dev/temp-mod/node_modules/autotrack/lib/provide.js"],"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.initSymbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","DEFAULT_PORT","a","document","createElement","cache","parseUrl","url","location","href","charAt","port","HTTP_PORT","HTTPS_PORT","host","replace","hash","hostname","origin","protocol","pathname","search","instances","constructor","MethodChain","context","methodName","originalMethodReference","isTask","test","get","methodChain","boundMethodChain","wrappedMethod","this.wrappedMethod","lastBoundMethod","length","args","$jscomp.arrayFromIterator","$jscomp.makeIterator","set","remove","overrideMethod","index","indexOf","splice","rebindMethodChain","destroy","method","i","previousMethod","bind","push","getOrCreateMethodChain","filter","h","assign","Object","target","len","sources","source","key","prototype","hasOwnProperty","call","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","PLUGIN_COUNT","keys","CleanUrlTracker","tracker","opts","VERSION","usageHex","parseInt","toString","str","toAdd","plugin","usageBin","substr","defaultOpts","queryDimension","stripQuery","queryDimensionIndex","trackerGetOverride","buildHitTaskOverride","add","methodOverride","originalMethod","field","fieldsObj","page","cleanUrlFields","cleanedFieldsObj","model","indexFilename","parts","split","join","trailingSlash","isFilename","stripNonWhitelistedQueryParams","slice","NULL_DIMENSION","urlFieldsFilter","userCleanedFieldsObj","returnValue","searchString","Array","isArray","queryParamsWhitelist","foundParams","forEach","kv","value","map","provide","pluginName","pluginConstructor","gaAlias","window","GoogleAnalyticsObject","q","gaDevIds","DEV_ID","gaplugins","toUpperCase"],"mappings":"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","file":"","sourcesContent":[null,null,null,null,null,"const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride);\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n",null,"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryParamsWhitelist: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (this.opts.stripQuery ?\n          this.stripNonWhitelistedQueryParams(url.search) : url.search),\n    };\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      const returnValue = {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n      };\n      if (this.queryDimension) {\n        returnValue[this.queryDimension] =\n            userCleanedFieldsObj[this.queryDimension];\n      }\n      return returnValue;\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Accpets a raw URL search string and returns a new search string containing\n   * only the site search params (if they exist).\n   * @param {string} searchString The URL search string (starting with '?').\n   * @return {string} The query string\n   */\n  stripNonWhitelistedQueryParams(searchString) {\n    if (Array.isArray(this.opts.queryParamsWhitelist)) {\n      const foundParams = [];\n      searchString.slice(1).split('&').forEach((kv) => {\n        const [key, value] = kv.split('=');\n        if (this.opts.queryParamsWhitelist.indexOf(key) > -1 && value) {\n          foundParams.push([key, value]);\n        }\n      });\n\n      return foundParams.length ?\n          '?' + foundParams.map((kv) => kv.join('=')).join('&') : '';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n"]}